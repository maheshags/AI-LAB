import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_win(board, player):
    for i in range(3):
        if all([cell == player for cell in board[i]]):  # Check rows
            return True
        if all([board[j][i] == player for j in range(3)]):  # Check columns
            return True
    if all([board[i][i] == player for i in range(3)]):  # Diagonal
        return True
    if all([board[i][2 - i] == player for i in range(3)]):  # Anti-diagonal
        return True
    return False

def is_draw(board):
    return all(cell in ['X', 'O'] for row in board for cell in row)

def get_available_moves(board):
    return [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]

def computer_move(board):
    available = get_available_moves(board)
    return random.choice(available)

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]

    while True:
        print_board(board)
        
        # Human turn
        while True:
            try:
                row = int(input("Your move (row 0-2): "))
                col = int(input("Your move (col 0-2): "))
                if board[row][col] == " ":
                    board[row][col] = "X"
                    break
                else:
                    print("Cell already taken. Try again.")
            except (ValueError, IndexError):
                print("Invalid input. Enter numbers between 0 and 2.")
        
        if check_win(board, "X"):
            print_board(board)
            print("You win!")
            break
        if is_draw(board):
            print_board(board)
            print("It's a draw!")
            break

        # Computer turn
        print("Computer's turn:")
        row, col = computer_move(board)
        board[row][col] = "O"

        if check_win(board, "O"):
            print_board(board)
            print("Computer wins!")
            break
        if is_draw(board):
            print_board(board)
            print("It's a draw!")
            break

tic_tac_toe()
